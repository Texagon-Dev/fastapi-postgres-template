services:
  traefik:
    image: traefik:v3.3
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      # - "--entrypoints.websecure.address=:443"
      # Automatically redirect HTTP to HTTPS
      # - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      # - "--entrypoints.web.http.redirections.entryPoint.permanent=true"
      # ACME (Let's Encrypt) configuration:
      # - "--certificatesresolvers.myresolver.acme.email=support@tab2fix.com"
      # - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      # - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
    ports:
      # - "443:443"
      - "80:80"
      - "8080:8080"
    networks:
      - hbky
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # - "./letsencrypt:/letsencrypt"  # Persist certificates

  db:
    image: postgres:17.0-alpine
    container_name: db_container
    environment:
      - POSTGRES_USER=hbky
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=fastapi_db
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hbky
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hbky -d fastapi_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  fastapi:
    image: fastapi-template
    container_name: fastapi_container
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`api.localhost`)"
      - "traefik.http.services.fastapi.loadbalancer.server.port=8000"
    environment:
      - DATABASE_URL=postgresql+psycopg2://hbky:password@db:5432/fastapi_db
      - DATABASE_USER=hbky
      - DATABASE_PASSWORD=password
      - DATABASE_PORT=5432
      - DATABASE_NAME=fastapi_db
      - DATABASE_HOST=db
    command: >
      sh -c "sleep 10 && uv run alembic upgrade head &&
            uv run python -m app.commands.create_admin &&
            uv run uvicorn app.main:app --host 0.0.0.0 --port 8000"
    networks:
      - hbky
    depends_on:
      db:
        condition: service_healthy
      traefik:
        condition: service_started

networks:
  hbky:
    driver: bridge

volumes:
  postgres-data: